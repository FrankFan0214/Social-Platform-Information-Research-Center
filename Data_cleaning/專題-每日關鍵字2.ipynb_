{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["cv0XOx-aEK0S","T3VSK1MRDyHO","xd8DPBtHXijW","6f0nV5KVYI1Y"],"authorship_tag":"ABX9TyO7vDl5yG7LZ41Kq6FiRXdm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### ***Install & Import***"],"metadata":{"id":"cv0XOx-aEK0S"}},{"cell_type":"code","source":["!pip install pymongo                  # 安裝 pymongo，這是一個用來連線和操作 MongoDB 資料庫的 Python 庫\n","!pip install mysql-connector-python   # 安裝 mysql-connector-python，這是用來連線和操作 MySQL 資料庫的 Python 庫\n","!pip install jieba                    # 安裝 jieba，這是一個開源的中文斷詞工具，可用於中文文字處理\n","!pip install pandas                   # 安裝 pandas，一個強大的資料分析和處理工具，適合用於資料操作和資料框架處理"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i9kUDgbdxIlS","executionInfo":{"status":"ok","timestamp":1730730972026,"user_tz":-480,"elapsed":34116,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}},"outputId":"8921d0fe-746b-4edd-ad67-e6d1bc7c3307"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pymongo\n","  Downloading pymongo-4.10.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)\n","Collecting dnspython<3.0.0,>=1.16.0 (from pymongo)\n","  Downloading dnspython-2.7.0-py3-none-any.whl.metadata (5.8 kB)\n","Downloading pymongo-4.10.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m10.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dnspython-2.7.0-py3-none-any.whl (313 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m313.6/313.6 kB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: dnspython, pymongo\n","Successfully installed dnspython-2.7.0 pymongo-4.10.1\n","Collecting mysql-connector-python\n","  Downloading mysql_connector_python-9.1.0-cp310-cp310-manylinux_2_28_x86_64.whl.metadata (6.0 kB)\n","Downloading mysql_connector_python-9.1.0-cp310-cp310-manylinux_2_28_x86_64.whl (34.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.4/34.4 MB\u001b[0m \u001b[31m37.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: mysql-connector-python\n","Successfully installed mysql-connector-python-9.1.0\n","Requirement already satisfied: jieba in /usr/local/lib/python3.10/dist-packages (0.42.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.2.2)\n","Requirement already satisfied: numpy>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n"]}]},{"cell_type":"code","source":["import os                                               # 匯入作業系統模組，用來進行與作業系統相關的操作\n","import pandas as pd                                     # 匯入 pandas，這是用於資料操作和分析的庫，特別是資料框架的處理\n","import pymongo                                          # 匯入 pymongo，用於連線和操作 MongoDB 資料庫\n","import mysql.connector                                  # 匯入 mysql.connector，用於連線和操作 MySQL 資料庫\n","import jieba                                            # 匯入 jieba，這是一個中文斷詞工具，可用於中文文字的處理\n","import re                                               # 匯入正規表示法模組，用於進行字串匹配和處理\n","import heapq                                            # 匯入 heapq，這個庫提供了堆操作相關的功能，主要用於優先佇列的實現\n","import logging                                          # 匯入 logging，用於記錄程式執行的日誌，方便除錯和監控\n","import sys\n","import itertools                                        # 新增這一行以匯入 itertools 模組\n","from pymongo import MongoClient                         # 從 pymongo 匯入 MongoClient，用於建立 MongoDB 的客戶端例項\n","from mysql.connector import Error, MySQLConnection, pooling # 從 mysql.connector 中匯入 Error，以便於處理資料庫的錯誤\n","from mysql.connector.cursor import MySQLCursor\n","from collections import defaultdict, Counter            # 從 collections 模組中匯入 defaultdict，一種字典的子類，能提供預設值\n","from datetime import datetime                           # 從 datetime 模組中匯入 datetime，提供日期和時間處理的功能\n","from contextlib import contextmanager                   # 匯入上下文管理器，用於資源管理\n","from functools import lru_cache                         # 匯入LRU快取，用於提升函式效能\n","from typing import Optional, List, Tuple, Dict, Any, Union    # 從 typing 模組中匯入指定的類型註釋"],"metadata":{"id":"1wtyYSn6SXlT","executionInfo":{"status":"ok","timestamp":1730730973306,"user_tz":-480,"elapsed":1284,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["### ***Stopwords***\n","\n"],"metadata":{"id":"T3VSK1MRDyHO"}},{"cell_type":"code","source":["CUSTOM_STOPWORDS = {\n","    \"--\", \"2024\", \"com\", \"cc\", \"https\", \"表示\", \" \", \"／\", \"X\", \"聆\", \"聽\", \"▪\", \";\", \"★\", \"翻攝\", \"nothing\", \"imgur\", \"17\",\"八卦\",\"記者\",\n","    \"翻攝\", \"繼續\", \"Sent\", \"21\", \"20\", \"on\", \"my\", \"12\", \"16\", \"!\",\"#\",\"$\",\"%\",\"&\",\"'\",\"(\",\")\",\"*\",\"+\",\",\",\"-\",\"--\",\".\",\"【\", \"】\",\"\\n\"\n","    \"..\",\"...\",\"/\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\", \"11\", \"17\", \"18\", \"19\", \"09\", \"15\", \"22\",\n","    \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n","    \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n","    \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\",\n","    \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\",\n","    \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"100\",\n","    \":\",\";\",\"<\",\"=\",\">\",\">>\",\"?\",\"@\",\"A\",\"[\",\"]\",\"^\",\"_\",\"`\",\"|\", \"報導\", \"問題\", \"帳號\", \"這種\", \"是不是\", \"▲\", \"/\", \"內容\", \"\", \"請\",\n","    \"~\",\"·\",\"—\",\"——\",\"‘\",\"’\",\"“\",\"”\",\"…\",\"、\",\"。\",\"〈\",\"〉\",\"《\",\"》\", \"，\", \"」\", \"「\", \"說\", \"─\", \"後\", \"年\", \"月\", \"日\", \".\", \"i\", \"￣\",\n","    \"一\",\"一些\",\"一何\",\"一來\",\"一切\",\"一则\",\"一則\",\"一方面\",\"一旦\",\"一来\", \"使用者\", \"版主\", \"〔\", \"〕\", \"│\", \"Ｘ\", \"圖\", \"想\",\n","    \"一样\",\"一樣\",\"一般\",\"一转眼\",\"七\",\"万一\",\"三\",\"三天兩頭\",\"三番五次\", \"-----\", \"三番兩次\",\"上\",\"上下\",\"上來\",\"上去\",\"下\",\"不\",\"不下\",\n","    \"不了\",\"不亦樂乎\", \"不仅\",\"不但\",\"不但...而且\",\"不僅\",\"不僅...而且\",\"不僅僅\",\"不僅僅是\", \"不光\",\"不免\",\"不再\",\"不力\",\"不勝\",\"不单\",\n","    \"不只\",\"不可抗拒\",\"不可開交\", \"不同\",\"不問\",\"不單\",\"不外\",\"不外乎\",\"不大\",\"不如\",\"不妨\",\"不定\",\"不對\", \"不少\",\"不尽\",\"不尽然\",\"不巧\",\n","    \"不已\",\"不常\",\"不得\",\"不得不\",\"不得了\",\"不得已\", \"不必\",\"不怎麼\",\"不怕\",\"不惟\",\"不成\",\"不拘\",\"不擇手段\",\"不料\",\"不日\",\"不是\",\n","    \"不時\",\"不曾\",\"不會\",\"不止\",\"不止一次\",\"不比\",\"不消\",\"不滿\",\"不然\",\"不然的話\", \"不特\",\"不独\",\"不獨\",\"不由得\",\"不知不覺\",\"不管\",\n","    \"不管怎樣\",\"不經意\",\"不能\",\"不能不\", \"不至于\",\"不至於\",\"不若\",\"不要\",\"不論\",\"不论\",\"不起\",\"不过\",\"不迭\",\"不過\",\"不问\", \"不限\",\n","    \"与\",\"与其\",\"与其说\",\"与否\",\"与此同时\",\"且\",\"且不说\",\"且说\",\"两者\",\"並\", \"並且\",\"並沒\",\"並沒有\",\"並無\",\"並肩\",\"並非\",\"个\",\"个别\",\n","    \"串列\",\"临\",\"为\",\"为了\", \"为什么\",\"为何\",\"为止\",\"为此\",\"为着\",\"乃\",\"乃至\",\"乃至于\",\"么\",\"之\",\"之一\",\"之所以\", \"之类\",\"之類\",\"乌乎\",\n","    \"乎\",\"乒\",\"乘\",\"乘勝\",\"乘勢\",\"乘機\",\"乘虛\",\"乘隙\",\"九\",\"也\", \"也好\",\"也罢\",\"也罷\",\"了\",\"二\",\"二来\",\"二話不說\",\"二話沒說\",\"于\",\n","    \"于是\",\"于是乎\", \"云云\",\"云尔\",\"互\",\"互相\",\"五\",\"些\",\"交口\",\"亦\",\"人\",\"人人\",\"人们\",\"人家\",\"人民\", \"什么\",\"什么样\",\"什麼\",\"什麼樣\",\n","    \"今\",\"介于\",\"仍\",\"仍旧\",\"仍然\",\"仍舊\",\"从\",\"从此\", \"从而\",\"他\",\"他人\",\"他们\",\"他們\",\"以\",\"以上\",\"以为\",\"以便\",\"以免\",\"以及\",\"以故\",\n","    \"以期\",\"以来\",\"以至\",\"以至于\",\"以至於\",\"以致\",\"们\",\"任\",\"任何\",\"任凭\",\"任憑\", \"似的\",\"但\",\"但凡\",\"但是\",\"但願\",\"何\",\"何以\",\"何况\",\n","    \"何嘗\",\"何处\",\"何妨\",\"何必\", \"何时\",\"何時\",\"何樂而不為\",\"何止\",\"何況\",\"何苦\",\"何處\",\"何須\",\"余外\",\"作为\", \"表示\", \"作為\",\"你\",\"你们\",\n","    \"你們\",\"併排\",\"使\",\"使得\",\"來\",\"來不及\",\"來得及\",\"來看\",\"來著\", \"來講\",\"例如\",\"依\",\"依据\",\"依照\",\"便\",\"便于\",\"保管\",\"保險\",\"俺\",\n","    \"俺们\",\"個\",\"個人\", \"倍加\",\"倍感\",\"們\",\"倒不如\",\"倒不如說\",\"倒是\",\"倘\",\"倘使\",\"倘或\",\"倘然\",\"倘若\",\"借\", \"假使\",\"假如\",\"假若\",\"偏偏\",\n","    \"偶爾\",\"偶而\",\"傥然\",\"傳\",\"傳聞\",\"傳說\",\"僅\",\"僅僅\",\"像\", \"儘可能\",\"儘快\",\"儘早\",\"儘管\",\"儘管如此\",\"儘量\",\"儿\",\"充其極\",\"充其量\",\"充分\",\n","    \"先不先\", \"光\",\"光是\",\"內\",\"全体\",\"全力\",\"全年\",\"全然\",\"全身心\",\"全部\",\"全都\",\"兩者\",\"八\",\"八成\", \"公然\",\"六\",\"兮\",\"共\",\"共總\",\n","    \"关于\",\"其\",\"其一\",\"其中\",\"其二\",\"其他\",\"其余\",\"其它\",\"其實\", \"其後\",\"其次\",\"其餘\",\"具体地说\",\"具体说来\",\"具體來說\",\"具體地說\",\n","    \"具體說來\",\"兼之\",\"内\", \"再\",\"再其次\",\"再则\",\"再有\",\"再者\",\"再者说\",\"再說\",\"再说\",\"冒\",\"冲\",\"况且\",\"凝神\",\"几\", \"几时\",\"凡\",\"凡是\",\n","    \"凭\",\"凭借\",\"出\",\"出于\",\"出來\",\"出去\",\"出来\",\"分别\",\"分期\",\"分期分批\", \"分頭\",\"切\",\"切不可\",\"切切\",\"切勿\",\"切莫\",\"则\",\"则甚\",\"初\",\n","    \"別\",\"別人\",\"別的\",\"別說\",\"别\", \"别人\",\"别处\",\"别是\",\"别的\",\"别管\",\"别说\",\"到\",\"到了兒\",\"到底\",\"到目前為止\",\"到處\",\"到頭\",\n","    \"到頭來\",\"則\",\"前后\",\"前後\",\"前此\",\"前者\",\"剛\",\"剛好\",\"剛巧\",\"剛才\",\"加上\",\"加之\",\"加以\", \"勃然\",\"動不動\",\"動輒\",\"匆匆\",\"千\",\"千萬\",\n","    \"千萬千萬\",\"半\",\"即\",\"即令\",\"即使\",\"即便\",\"即刻\", \"即如\",\"即將\",\"即或\",\"即是說\",\"即若\",\"却\",\"去\",\"又\",\"又及\",\"及\",\"及其\",\"及至\",\"反之\",\n","    \"反之亦然\",\"反之則\",\"反倒\",\"反倒是\",\"反手\",\"反而\",\"反过来\",\"反过来说\",\"反過來\",\"反過來說\", \"取道\",\"受到\",\"古來\",\"另\",\"另一個\",\n","    \"另一方面\",\"另外\",\"另悉\",\"另方面\",\"另行\",\"只\",\"只当\", \"只怕\",\"只是\",\"只有\",\"只消\",\"只要\",\"只限\",\"叫\",\"叮咚\",\"叮噹\",\"可\",\"可以\",\n","    \"可好\",\"可是\", \"可能\",\"可見\",\"可见\",\"各\",\"各个\",\"各位\",\"各個\",\"各式\",\"各种\",\"各種\",\"各自\",\"同\",\"同时\", \"同時\",\"后\",\"后者\",\"向\",\n","    \"向使\",\"向着\",\"向著\",\"吓\",\"吗\",\"否则\",\"否則\",\"吧\",\"吧哒\",\"吧噠\", \"吱\",\"吶\",\"呀\",\"呃\",\"呆呆地\",\"呕\",\"呗\",\"呜\",\"呜呼\",\"呢\",\"呵\",\n","    \"呵呵\",\"呸\",\"呼哧\",\"呼啦\", \"咋\",\"和\",\"咚\",\"咦\",\"咧\",\"咱\",\"咱们\",\"咱們\",\"咳\",\"哇\",\"哈\",\"哈哈\",\"哉\",\"哎\",\"哎呀\", \"哎哟\",\"哎喲\",\"哗\",\n","    \"哟\",\"哦\",\"哩\",\"哪\",\"哪个\",\"哪些\",\"哪個\",\"哪儿\",\"哪兒\",\"哪天\",\"哪年\", \"哪怕\",\"哪样\",\"哪樣\",\"哪裏\",\"哪边\",\"哪邊\",\"哪里\",\"哼\",\n","    \"哼唷\",\"唄\",\"唉\",\"唯有\",\"啊\",\"啊呀\", \"啊哈\",\"啊喲\",\"啐\",\"啥\",\"啦\",\"啪达\",\"啪達\",\"啷当\",\"喀\",\"喂\",\"喏\",\"喔唷\",\"單\", \"jpeg\"\n","    \"單單\",\"單純\",\"喲\",\"喽\",\"嗎\",\"嗚\",\"嗚呼\",\"嗡\",\"嗡嗡\",\"嗬\",\"嗯\",\"嗳\",\"嘎\",\"嘎嘎\",\"嘎登\", \"嘔\",\"嘘\",\"嘛\",\"嘩\",\"嘩啦\",\"嘻\",\"嘿\",\n","    \"嘿嘿\",\"噓\",\"噯\",\"嚇\",\"四\",\"因\",\"因为\",\"因了\", \"表示\" \"因此\",\"因為\",\"因着\",\"因而\",\"固\",\"固然\",\"在\",\"在下\",\"在于\",\"地\",\"均\",\"基于\",\n","    \"基於\", \"基本\",\"基本上\",\"处在\",\"多\",\"多么\",\"多多\",\"多多少少\",\"多多益善\",\"多少\",\"多年來\",\"多年前\", \"多次\",\"多虧\",\"夠瞧的\",\"夥同\",\n","    \"大\",\"大不了\",\"大事\",\"大凡\",\"大多\",\"大大\",\"大家\",\"大張旗鼓\", \"大抵\",\"大概\",\"大略\",\"大約\",\"大致\",\"大舉\",\"大都\",\"大面兒上\",\"大體\",\n","    \"大體上\",\"奇\",\"奈\", \"奮勇\",\"她\",\"她们\",\"她們\",\"好\",\"好在\",\"如\",\"如上\",\"如上所述\",\"如下\",\"如今\",\"如何\", \"jpeg\" \"如其\",\"如前所述\",\n","    \"如同\",\"如常\",\"如是\",\"如期\",\"如果\",\"如次\",\"如此\",\"如此等等\",\"如若\", \"始而\",\"姑且\",\"存心\",\"孰料\",\"孰知\",\"宁\",\"宁可\",\"宁愿\",\"宁肯\",\n","    \"它\",\"它们\",\"它們\", \"jpg\" \"定\",\"寧\",\"寧可\",\"寧肯\",\"寧願\",\"对\",\"对于\",\"对待\",\"对方\",\"对比\",\"将\",\"將\",\"將才\", \"17\", \"將要\",\n","    \"將近\",\"對\",\"對於\",\"小\",\"尔\",\"尔后\",\"尔尔\",\"尚且\",\"就\",\"就地\",\"就是\",\"就是了\", \"就是說\",\"就是说\",\"就此\",\"就算\",\"就要\",\"尽\",\n","    \"尽管\",\"尽管如此\",\"局外\",\"居然\",\"屆時\", \"屢\",\"屢屢\",\"屢次\",\"屢次三番\",\"岂但\",\"川流不息\",\"差一點\",\"差不多\",\"己\",\"已\", \"jpg\"\n","    \"已矣\",\"巴\",\"巴巴\",\"帶\",\"常\",\"常常\",\"常言說\",\"常言說得好\",\"常言道\",\"平素\",\"年覆一年\",\"并\",\"并且\",\"并非\",\"幾\",\"幾乎\",\"幾度\",\"幾時\",\n","    \"幾番\",\"幾經\",\"庶乎\",\"庶几\",\"开外\", \"开始\",\"弗\",\"彈指之間\",\"归\",\"归齐\",\"当\",\"当地\",\"当然\",\"当着\",\"彼\",\"彼时\",\"彼此\",\n","    \"往\",\"待\",\"待到\",\"很\",\"很多\",\"很少\",\"後來\",\"得\",\"得了\",\"得天獨厚\",\"得起\",\"從\", \"17\", \"從不\",\"從中\",\"從今以後\",\"從來\",\"從優\",\n","    \"從古到今\",\"從古至今\",\"從嚴\",\"從寬\",\"從小\", \"從新\",\"從早到晚\",\"從未\",\"從此\",\"從此以後\",\"從無到有\",\"從而\",\"從輕\",\"從速\",\"從重\",\n","    \"從頭\",\"徹夜\",\"必\",\"必定\",\"必將\",\"必須\",\"快\",\"快要\",\"忽地\",\"忽然\",\"怎\",\"怎么\", \"怎么办\",\"怎么样\",\"怎奈\",\"怎样\",\"怎樣\",\"怎麼\",\n","    \"怎麼樣\",\"怎麼辦\",\"怕\",\"急匆匆\", \"怪\",\"怪不得\",\"总之\",\"总的来看\",\"总的来说\",\"总的说来\",\"总而言之\",\"恍然\",\"恐怕\", \"恰似\",\"恰好\",\n","    \"恰如\",\"恰巧\",\"恰恰\",\"恰恰相反\",\"恰逢\",\"您\",\"惟其\",\"慢說\",\"慢说\", \"慣常\",\"憑\",\"憑藉\",\"憤然\",\"成年\",\"成年累月\",\"成心\",\"我\",\n","    \"我们\",\"我們\",\"或\", \"知道\", \"或则\",\"或多或少\",\"或是\",\"或曰\",\"或者\",\"或許\",\"截然\",\"截至\",\"所\",\"所以\",\"所在\", \"所幸\",\"所有\",\n","    \"才\",\"才能\",\"打\",\"打从\",\"打從\",\"打開天窗說亮話\",\"把\",\"抑或\",\"抽冷子\", \"拿\",\"按\",\"按時\",\"按期\",\"按照\",\"按理\",\"按說\",\"挨個\",\n","    \"挨家挨戶\",\"挨次\",\"挨著\", \"挨門挨戶\",\"挨門逐戶\",\"换句话说\",\"换言之\",\"据\",\"据此\",\"接下來\",\"接着\",\"接著\", \"接連不斷\",\"換句話說\",\n","    \"換言之\",\"撲通\",\"據\",\"據實\",\"據悉\",\"據我所知\",\"據此\",\"據稱\", \"據說\",\"攔腰\",\"放量\",\"故\",\"故意\",\"故此\",\"故而\",\"敞開兒\",\"敢\",\n","    \"敢情\",\"敢於\", \"知道\" \"斷然\",\"方\",\"方才\",\"方能\",\"於\",\"於是\",\"於是乎\",\"旁人\",\"无\",\"无宁\",\"无论\",\"既\", \"既...又\",\"既往\",\n","    \"既是\",\"既然\",\"日漸\",\"日益\",\"日臻\",\"日覆一日\",\"日見\",\"时候\", \"昂然\",\"是\",\"是以\",\"是的\",\"時候\",\"暗中\",\"暗地裏\",\"暗自\",\"更\",\n","    \"更加\",\"更為\", \"更進一步\",\"曾\",\"替\",\"替代\",\"最\",\"會\",\"有\",\"有些\",\"有关\",\"有及\",\"有时\",\"有的\", \"有關\",\"望\",\"朝\",\"朝着\",\"朝著\",\n","    \"末##末\",\"本\",\"本人\",\"本地\",\"本着\",\"本著\", \"覺得\", \"本身\",\"来\",\"来着\",\"来自\",\"来说\",\"极了\",\"果然\",\"果真\",\"某\",\"某个\",\"某些\",\n","    \"某個\",\"某某\",\"根据\",\"根據\",\"格外\",\"梆\",\"極\",\"極了\",\"極其\",\"極力\",\"極大\", \"極度\",\"極為\",\"極端\",\"概\",\"權時\",\"次第\",\"欤\",\n","    \"正值\",\"正如\",\"正巧\",\"正是\", \"此\",\"此中\",\"此地\",\"此处\",\"此外\",\"此後\",\"此时\",\"此次\",\"此間\",\"此间\",\"歷\", \"歸\",\"歸根到底\",\n","    \"歸根結底\",\"殆\",\"毋宁\",\"毋寧\",\"每\",\"每当\",\"每時每刻\",\"每每\", \"每當\",\"每逢\",\"比\",\"比及\",\"比如\",\"比如說\",\"比方\",\"比照\", \"萬\",\n","    \"比起\",\"毫不\",\"毫無\", \"毫無例外\",\"毫無保留地\",\"汝\",\"決不\",\"決非\",\"沒\",\"沒有\",\"沖\",\"沙沙\",\"没奈何\", \"沿\",\"沿着\",\"沿著\", \"認為\", \"部分\",\n","    \"況且\",\"活\",\"湊巧\",\"滿\",\"漫說\",\"漫说\",\"為\",\"為了\",\"為什麼\", \"為何\",\"為著\",\"烏乎\",\"焉\",\"無寧\",\"無論\",\"然\",\"然则\",\"然則\",\"更多\", \"哲\",\n","    \"然后\",\"然後\",\"然而\", \"照\",\"照着\",\"照著\",\"爾後\",\"爾等\",\"牢牢\",\"犹且\",\"犹自\",\"猛然\",\"猛然間\",\"獨\", \"獨自\",\"率然\",\"率爾\",\"短\", \"係\",\n","    \"理應\",\"理當\",\"理該\",\"瑟瑟\",\"甚且\",\"甚么\",\"甚或\",\"甚而\", \"甚至\",\"甚至于\",\"甚麼\",\"用\",\"用来\",\"甫\",\"甭\",\"由\",\"由于\",\"由於\",\"度\", \"大型\",\n","    \"由是\",\"由此\", \"由此可見\",\"由此可见\",\"畢竟\",\"略\",\"略加\",\"略微\",\"略為\",\"當\",\"當下\",\"當中\", \"覺得\", \"當兒\",\"當即\",\"當口兒\", \"王先生\", \"習\",\n","    \"當場\",\"當庭\",\"當然\",\"當真\",\"當著\",\"當頭\",\"白\",\"白白\",\"的\",\"的确\",\"的確\",\"的話\",\"的话\",\"皆可\",\"盡\",\"盡如人意\",\"盡心盡力\",\"複\", \"表檢視\",\n","    \"盡心竭力\",\"盡然\",\"直到\",\"相对而言\",\"相對而言\",\"省得\",\"看\",\"看上去\",\"看來\",\"看樣子\",\"看起來\",\"眨眼\",\"着\",\"着呢\",\"矣\",\"矣乎\",\n","    \"矣哉\",\"砰\",\"碰巧\",\"社會主義\",\"离\",\"究竟\",\"窮年累月\", \"竊\",\"立\",\"立刻\",\"立地\",\"立時\",\"立馬\",\"竟\",\"竟然\",\"竟而\",\"第\",\"等\",\"等到\",\n","    \"等等\",\"策略地\",\"简言之\",\"管\",\"簡直\",\"簡而言之\",\"簡言之\",\"类如\",\"粗\",\"精光\",\"純\", \"純粹\",\"紧接着\",\"累年\",\"累次\",\"結果\",\"絕\",\"絕不\",\n","    \"絕對\",\"絕非\",\"絕頂\",\"給\",\"經\", \"經常\",\"經過\",\"綜上所述\",\"緊接著\",\"縱\",\"縱令\",\"縱使\",\"縱然\",\"縷縷\",\"總之\",\"總的來看\",\n","    \"總的來說\",\"總的說來\",\"總而言之\",\"繼之\",\"繼而\",\"纵\",\"纵令\",\"纵使\",\"纵然\",\"经\",\"经过\",\"结果\", \"给\",\"继之\",\"继后\",\"继而\",\"综上所述\",\n","    \"罢了\",\"罷了\",\"老\",\"老大\",\"老是\",\"老老實實\", \"者\",\"而\",\"而且\",\"而况\",\"而又\",\"而后\",\"而外\",\"而已\",\"而後\",\"而是\",\"而況\",\"而言\",\"而論\",\n","    \"聯袂\",\"背地裏\",\"背靠背\",\"能\",\"能否\",\"腾\",\"臨\",\"臨到\",\"自\",\"自个儿\",\"自从\",\"自個兒\", \"自各儿\",\"自各兒\",\"自后\",\"自家\",\"自己\",\n","    \"自從\",\"自打\",\"自身\",\"臭\",\"至\",\"至于\", \"至今\",\"至於\",\"至若\",\"致\",\"與\",\"與其\",\"與否\",\"與此同時\",\"舉凡\",\"般的\",\"若\", \"網友\", \"往下\",\n","    \"若夫\",\"若是\",\"若果\",\"若非\",\"莫\",\"莫不\",\"莫不然\",\"莫如\",\"莫若\",\"莫非\",\"萬一\", \"著\",\"著呢\",\"藉以\",\"藉此\",\"處處\",\"虽\",\"虽则\",\n","    \"虽然\",\"虽说\",\"蠻\",\"被\",\"要\",\"要不\", \"要不是\",\"要不然\",\"要么\",\"要是\",\"要麼\",\"見\",\"親口\",\"親手\",\"親眼\",\"親自\",\"親身\", \"；\", \"很大\",\n","    \"設使\",\"設若\",\"話說\",\"該\",\"該當\",\"誠然\",\"誰\",\"誰知\",\"請勿\",\"論\",\"論說\",\"諸位\",\"謹\", \"譬喻\",\"譬如\",\"讓\",\"让\",\"许多\",\"论\", \"民眾\",\n","    \"设使\",\"设或\",\"设若\",\"诚如\",\"诚然\",\"该\", \"说来\",\"诸\",\"诸位\",\"诸如\",\"谁\",\"谁人\",\"谁料\",\"谁知\",\"豁然\",\"豈\",\"豈但\",\"豈止\", \"風\",\n","    \"豈非\",\"贼死\",\"赖以\",\"赶\",\"起\",\"起來\",\"起先\",\"起初\",\"起見\",\"起见\",\"起頭\",\"起首\", \"趁\",\"趁便\",\"趁勢\",\"趁早\",\"趁機\",\"趁熱\", \"歲\",\n","    \"趁着\",\"趁著\",\"越是\",\"趕\",\"趕快\", \"趕早不趕晚\",\"距\",\"跟\",\"路經\",\"較\",\"較之\",\"較比\",\"較為\",\"轟然\",\"较\",\"较之\",\"边\", \"卻\", \"也\",\n","    \"迄\",\"过\",\"近\",\"近來\",\"近年來\",\"近幾年來\",\"还\",\"还是\",\"还有\",\"还要\",\"这\",\"这一来\", \"这个\",\"这么\",\"这么些\",\"这么样\",\"这么点儿\",\n","    \"这些\",\"这会儿\",\"这儿\",\"这就是说\", \"这时\",\"这样\",\"这次\",\"这般\",\"这边\",\"这里\",\"进而\",\"连\",\"连同\",\"迫於\",\"逐步\", \"鄉\", \"對\", \"軍\",\n","    \"這\",\"這些\",\"這個\",\"這兒\",\"這就是說\",\"這時\",\"這會兒\",\"這樣\",\"這裏\",\"這邊\",\"這麼\", \"這麼些\",\"這麼樣\",\"這麼點兒\",\"通过\",\"通過\", \"公司\",\n","    \"逢\",\"連\",\"連同\",\"連日\",\"連日來\", \"連聲\",\"連袂\",\"連連\",\"進來\",\"進去\",\"進而\",\"過\",\"過於\",\"達旦\",\"遲早\",\"遵循\",\"遵照\", \"明\", \"颱\", \"停止\",\n","    \"還\",\"還是\",\"還有\",\"邊\",\"那\",\"那个\",\"那么\",\"那么些\",\"那么样\",\"那些\",\"那会儿\",\"那個\",\"那儿\", \"那兒\",\"那时\",\"那時\",\"那會兒\",\n","    \"那末\",\"那样\",\"那樣\",\"那般\",\"那裏\",\"那边\",\"那邊\",\"那里\", \"那麼\",\"那麼些\",\"那麼樣\",\"都\",\"鄙人\",\"鉴于\",\"鑒於\",\"针对\",\"長期以來\",\"長此下去\",\"長線\",\n","    \"長話短說\",\"開外\",\"開始\",\"間或\",\"關於\",\"阿\",\"陡然\",\"除\",\"除了\",\"除卻\",\"除去\",\"除外\",\"除开\", \"除此\",\"除此之外\",\"除此以外\",\"除此而外\",\n","    \"除開\",\"除非\",\"陳年\",\"随\",\"随后\",\"随时\", \"随着\",\"隔夜\",\"隔日\",\"隨\",\"隨著\",\"难道说\",\"雖\",\"雖則\",\"雖然\",\"雖說\",\"離\",\"難得\", \"®\", \"強\",\n","    \"難怪\",\"難說\",\"難道\",\"雲雲\",\"零\",\"非但\",\"非常\",\"非徒\",\"非得\",\"非特\",\"非独\",\"完整\", \"10\", \"靠\",\"頂多\",\"頃\",\"頃刻\",\"頃刻之間\",\n","    \"頃刻間\",\"順\",\"順著\",\"頓時\",\"頗\",\"顺\", \"表示\", \"顺着\",\"風雨無阻\",\"飽\",\"餵\",\"首先\",\"馬上\",\"騰\",\"高低\",\"麼\",\"默然\",\"默默地\", \"分\",\n","    \"齊\",\"︿\",\"！\",\"＃\",\"＄\",\"％\",\"＆\",\"（\",\"）\",\"＊\",\"＋\", \"直接\", \"，\",\"０\",\"１\",\"２\",\"３\",\"４\",\"５\",\"６\",\"７\",\"８\",\"９\",\"：\", \"知道\",\n","    \"；\",\"＜\",\"＞\",\"？\",\"＠\",\"［\",\"］\",\"｛\",\"｜\",\"｝\",\"～\", \"直接\", \"10\", \"表示\",\"￥\",\"剛剛\",\"之前\",\"安安\",\"某個\",\"最近\", \"雙\", \"黨\",\n","    \"這就\",\"事情\",\"原因\",\"昨天\",\"今天\",\"明天\", \"這個\",\"那個\",\"如果\",\"其實\",\"即使\",\"如題\",\"大家\",\"同時\",\"以下\",\"各位\",\"真的\",\"以前\",\n","    \"以後\",\"未來\",\"是否\",\"目前\",\"要講\",\"這兩個\",\"前天\",\"這樣\",\"那樣\",\"看起\",\"一堆\", \"一個\",\"有人\",\"https\",\"如題\",\"媒體\"\"來源\", \"；\",\n","    \"台灣\", \"imgur\", \"www\", \"媒體\", \"違者\", \"看到\", \"com\", \"新聞\", \"來源\", \"文章\", \"以前\", \"刪除\", \"現在\", \"15\", \"一嘔\", \"\",\n","    \"表示\", \"知道\", \"jpg\", \"jpeg\", \"覺得\", \"from\", \"這次\", \"一直\", \"17\", \"長\", \"中\", \"時\", \"前\", \"元\", \"指出\", \"提供\", \"台\", \"臺\", \"復\", \"今年\",\n","    \"勿\", \"店\", \"使用\", \"請\", \"隨意\", \"走\", \"指定\", \"吋\", \"™\", \"王\", \"陳\", \"NT\", \"路\", \"神\", \"線\", \"影響\", \"路段\", \"運\", \"總\", \"推出\"\n","}"],"metadata":{"id":"HkmSRscsAkHc","executionInfo":{"status":"ok","timestamp":1730735121624,"user_tz":-480,"elapsed":5,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["### ***DatabaseManager***"],"metadata":{"id":"xd8DPBtHXijW"}},{"cell_type":"code","source":["class DatabaseManager:\n","    \"\"\"資料庫管理類別，包括MongoDB和MySQL的配置與操作\"\"\"\n","\n","    MONGO_URI = \"mongodb://user4:password4@35.189.181.117:28017/admin\"  # MongoDB連線字串\n","    MYSQL_CONFIG = {  # MySQL配置字典\n","        'host': '34.81.244.193',\n","        'database': 'PTT',\n","        'user': 'user3',\n","        'password': 'password3',\n","        'pool_size': 5,\n","        'pool_name': 'mypool',\n","        'buffered': True\n","    }\n","    BATCH_SIZE = 100  # 批次處理大小\n","\n","    def __init__(self):\n","        \"\"\"初始化方法，設定MongoDB客戶端和MySQL連線池\"\"\"\n","        self._mongo_client = None  # MongoDB客戶端\n","        self._mysql_pool = None  # MySQL連線池\n","        self._setup_logging()  # 設定日誌紀錄\n","\n","    def _setup_logging(self):\n","        \"\"\"配置日誌紀錄的處理器和格式\"\"\"\n","        logging.basicConfig(\n","            level=logging.INFO,\n","            format='%(asctime)s - %(levelname)s - %(message)s',\n","            handlers=[\n","                logging.FileHandler('post_analyzer.log'),  # 寫入日誌檔案\n","                logging.StreamHandler()  # 也輸出到控制檯\n","            ]\n","        )\n","\n","    @contextmanager\n","    def get_mongo_connection(self):\n","        \"\"\"MongoDB連線的上下文管理器\"\"\"\n","        if not self._mongo_client:  # 檢查MongoDB客戶端是否已初始化\n","            try:\n","                self._mongo_client = MongoClient(DatabaseManager.MONGO_URI)  # 建立MongoDB連線\n","                db = self._mongo_client['kafka']  # 指定資料庫\n","                collection = db['News_test']  # 指定集合\n","                yield collection  # 輸出集合以供使用\n","            except Exception as e:\n","                logging.error(f\"MongoDB連線錯誤: {e}\")  # 紀錄錯誤資訊\n","                raise  # 引發例外\n","        else:\n","            yield self._mongo_client['kafka']['News_test']  # 使用已存在的MongoDB連線\n","\n","    def _create_mysql_pool(self):\n","        \"\"\"如果不存在，建立MySQL連線池\"\"\"\n","        if not self._mysql_pool:  # 檢查MySQL連線池是否已初始化\n","            try:\n","                self._mysql_pool = mysql.connector.pooling.MySQLConnectionPool(\n","                    **DatabaseManager.MYSQL_CONFIG  # 使用配置初始化連線池\n","                )\n","                logging.info(\"MySQL連線池建立成功\")  # 紀錄成功訊息\n","            except Error as e:\n","                logging.error(f\"建立MySQL連線池時出錯: {e}\")  # 紀錄錯誤資訊\n","                raise  # 引發例外\n","\n","    @contextmanager\n","    def get_mysql_connection(self):\n","        \"\"\"MySQL連線的上下文管理器，使用連線池\"\"\"\n","        if not self._mysql_pool:  # 檢查是否需要建立MySQL連線池\n","            self._create_mysql_pool()  # 建立連線池\n","\n","        connection = None  # 初始化連線變數\n","        try:\n","            connection = self._mysql_pool.get_connection()  # 從連線池獲取連線\n","            yield connection  # 輸出連線以供使用\n","        except Error as e:\n","            logging.error(f\"從池中獲取MySQL連線時出錯: {e}\")  # 紀錄錯誤資訊\n","            raise  # 引發例外\n","        finally:\n","            if connection:  # 確保連線被正確關閉\n","                connection.close()  # 關閉連線"],"metadata":{"id":"k4vPkP1_CNZR","executionInfo":{"status":"ok","timestamp":1730735128263,"user_tz":-480,"elapsed":341,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["### ***Data Cleaning & Transformation***"],"metadata":{"id":"-XTFWHxhD_rg"}},{"cell_type":"code","source":["class KeywordStatisticsProcessor:\n","    \"\"\"關鍵字統計處理器\n","\n","    負責文章內容的關鍵字分析、統計和資料庫更新操作。\n","\n","    主要功能：\n","    1. 文章關鍵字提取和計數\n","    2. 關鍵字統計結果轉換\n","    3. 資料庫更新操作\n","    \"\"\"\n","\n","    def __init__(self, stopwords=None, min_word_length=1, batch_size=100):\n","        \"\"\"初始化處理器\n","\n","        Args:\n","            stopwords: 停用詞集合\n","            min_word_length: 最小詞長度\n","            batch_size: 批次處理大小\n","        \"\"\"\n","        self.stopwords = CUSTOM_STOPWORDS.union(set(stopwords or set()))\n","        self.min_word_length = max(1, min_word_length)\n","        self.batch_size = batch_size\n","        self.keyword_counts = defaultdict(lambda: defaultdict(lambda: defaultdict(int)))\n","        self._init_logger()\n","\n","    def _init_logger(self):\n","        \"\"\"初始化日誌系統\"\"\"\n","        self.logger = logging.getLogger(__name__)\n","        self.logger.setLevel(logging.INFO)\n","\n","        # 檔案處理器（10MB，保留5個備份）\n","        file_handler = logging.handlers.RotatingFileHandler(\n","            'keyword_processor.log',\n","            maxBytes=10_000_000,\n","            backupCount=5\n","        )\n","\n","        # 統一的日誌格式\n","        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n","        file_handler.setFormatter(formatter)\n","        console_handler = logging.StreamHandler()\n","        console_handler.setFormatter(formatter)\n","\n","        self.logger.addHandler(file_handler)\n","        self.logger.addHandler(console_handler)\n","\n","    def analyze_posts(self, contents):\n","        \"\"\"分析文章內容，提取關鍵字並計數\n","\n","        Args:\n","            contents: 單篇文章內容或文章列表\n","\n","        Returns:\n","            List[Tuple[str, int]]: 關鍵字和出現次數的列表\n","        \"\"\"\n","        if not contents:\n","            self.logger.warning(\"收到空內容\")\n","            return []\n","\n","        # 標準化輸入格式\n","        contents = [contents] if isinstance(contents, str) else contents\n","\n","        # 使用Counter統計關鍵字\n","        keywords_counter = Counter()\n","        for content in contents:\n","            if isinstance(content, str) and content.strip():\n","                try:\n","                    words = [word for word in jieba.cut(content)\n","                            if self._is_valid_keyword(word)]\n","                    keywords_counter.update(words)\n","                except Exception as e:\n","                    self.logger.error(f\"處理內容時發生錯誤: {str(e)}\")\n","\n","        return list(keywords_counter.items())\n","\n","    def _is_valid_keyword(self, word):\n","        \"\"\"檢查關鍵字是否有效\n","\n","        Args:\n","            word: 待檢查的關鍵字\n","\n","        Returns:\n","            bool: 是否為有效關鍵字\n","        \"\"\"\n","        return (isinstance(word, str) and\n","                word.strip() and\n","                word not in self.stopwords and\n","                len(word.strip()) >= self.min_word_length)\n","\n","    def process_document(self, document, source=None):\n","        \"\"\"處理單一文件的關鍵字統計\n","\n","        Args:\n","            document: 文件資料\n","            source: 來源網站\n","\n","        Returns:\n","            bool: 處理是否成功\n","        \"\"\"\n","        try:\n","            # 提取必要資訊\n","            if not isinstance(document, dict):\n","                self.logger.error(\"文件格式錯誤: 需要字典類型\")\n","                return False\n","\n","            value = document.get('value', {})\n","            if not isinstance(value, dict):\n","                self.logger.error(\"文件value欄位格式錯誤: 需要字典類型\")\n","                return False\n","\n","            # 取得內容，優先使用'內容'欄位，否則使用'content'欄位\n","            content = value.get('內容') or value.get('content')\n","            if not content:\n","                self.logger.warning(\"文件缺少內容欄位\")\n","                return False\n","\n","            # 確定來源\n","            source = source or self._determine_source(str(document.get('key', '')))\n","\n","            # 取得發布日期\n","            publish_date = self._get_document_date(document)\n","            if not publish_date:\n","                self.logger.warning(f\"無法取得發布日期, 來源={source}\")\n","                return False\n","\n","            # 確保publish_date是字串類型\n","            publish_date = str(publish_date)\n","\n","            # 統計關鍵字\n","            keyword_counts = self.analyze_posts(content)\n","            if not keyword_counts:\n","                self.logger.warning(f\"未找到有效關鍵字, 來源={source}\")\n","                return False\n","\n","            # 更新統計資料\n","            for keyword, count in keyword_counts:\n","                if keyword and isinstance(count, (int, float)):\n","                    # 使用字串作為字典鍵值\n","                    self.keyword_counts[publish_date][source][keyword] += count\n","\n","            return True\n","\n","        except Exception as e:\n","            self.logger.error(f\"處理文件時發生錯誤: {str(e)}\")\n","            return False\n","\n","#    @lru_cache(maxsize=1000)\n","    def _get_document_date(self, document):\n","        \"\"\"從文件中提取日期\n","\n","        Args:\n","            document: 文件資料\n","\n","        Returns:\n","            str: 格式化的日期字串\n","        \"\"\"\n","        try:\n","            if not isinstance(document, dict):\n","                return None\n","\n","            value = document.get('value', {})\n","            if not isinstance(value, dict):\n","                return None\n","\n","            date_fields = ['發佈日期', 'date', '發布時間', 'publish_date']\n","\n","            # 依序檢查可能的日期欄位\n","            for field in date_fields:\n","                date_str = value.get(field)\n","                if date_str:\n","                    if formatted_date := self._format_date(str(date_str)):\n","                        return formatted_date\n","\n","            # 如果找不到有效日期，使用當前日期\n","            return datetime.now().strftime('%Y-%m-%d')\n","\n","        except Exception as e:\n","            self.logger.error(f\"提取日期時發生錯誤: {str(e)}\")\n","            return None\n","\n","    def _format_date(self, date_string):\n","        \"\"\"格式化日期字串為統一格式\n","\n","        Args:\n","            date_string: 原始日期字串\n","\n","        Returns:\n","            str: 格式化後的日期字串 (YYYY-MM-DD)\n","        \"\"\"\n","        if not date_string:\n","            return None\n","\n","        patterns = {\n","            r'(\\d{4})-(\\d{2})-(\\d{2})': lambda m: f\"{m.group(1)}-{m.group(2)}-{m.group(3)}\",\n","            r'(\\d{4})年(\\d{1,2})月(\\d{1,2})日': lambda m: f\"{m.group(1)}-{int(m.group(2)):02d}-{int(m.group(3)):02d}\",\n","            r'(\\d{1,2})/(\\d{1,2})': lambda m: f\"{datetime.now().year}-{int(m.group(1)):02d}-{int(m.group(2)):02d}\",\n","            r'(\\d{4})-(\\d{2})-(\\d{2})T': lambda m: f\"{m.group(1)}-{m.group(2)}-{m.group(3)}\"\n","        }\n","\n","        try:\n","            for pattern, formatter in patterns.items():\n","                if match := re.match(pattern, date_string):\n","                    return formatter(match)\n","            return None\n","        except Exception as e:\n","            self.logger.error(f\"日期格式化錯誤: {e}, 原始字串: {date_string}\")\n","            return None\n","\n","    @staticmethod\n","    def _determine_source(url):\n","        \"\"\"根據URL判斷來源網站\n","\n","        Args:\n","            url: 網址字串\n","\n","        Returns:\n","            str: 來源網站名稱\n","        \"\"\"\n","        if not url:\n","            return 'ETtoday'\n","\n","        source_mapping = {\n","            'ptt': 'PTT',\n","            'dcard': 'Dcard',\n","            'ettoday': 'ETtoday',\n","            'yahoo': 'Yahoo',\n","            'setn': '三立新聞網',\n","            'udn': '聯合新聞網',\n","            'ltn': '自由時報'\n","        }\n","\n","        url_lower = url.lower()\n","        return next((value for key, value in source_mapping.items()\n","                    if key in url_lower), '其他新聞網')\n","\n","    def get_top_keywords(self, date, source, n=15):\n","        \"\"\"獲取特定日期和來源的熱門關鍵字\n","\n","        Args:\n","            date: 日期\n","            source: 來源\n","            n: 返回的關鍵字數量\n","\n","        Returns:\n","            Tuple[List, List]: 關鍵字列表和對應的次數列表\n","        \"\"\"\n","        source_keywords = self.keyword_counts.get(date, {}).get(source, {})\n","        top_n = heapq.nlargest(n, source_keywords.items(), key=lambda x: x[1])\n","\n","        keywords, counts = zip(*top_n) if top_n else ([], [])\n","\n","        # 補足到指定長度\n","        keywords = list(keywords) + [None] * (n - len(keywords))\n","        counts = list(counts) + [None] * (n - len(counts))\n","\n","        return keywords, counts\n","\n","    def get_dataframe(self):\n","        \"\"\"將關鍵字統計結果轉換為DataFrame\n","\n","        Returns:\n","            pd.DataFrame: 包含關鍵字統計的DataFrame\n","        \"\"\"\n","        data = []\n","        for date in sorted(self.keyword_counts):\n","            for source, keywords in self.keyword_counts[date].items():\n","                for rank, (keyword, count) in enumerate(\n","                    heapq.nlargest(15, keywords.items(), key=lambda x: x[1]), 1):\n","                    data.append({\n","                        \"發佈日期\": date,\n","                        \"來源\": source,\n","                        \"排名\": rank,\n","                        \"關鍵字\": keyword,\n","                        \"次數\": count\n","                    })\n","        return pd.DataFrame(data)\n","\n","    def update_mysql_keywords(self, connection, cursor, df, table_name='每日關鍵詞'):\n","        \"\"\"更新MySQL資料庫中的關鍵字統計\n","\n","        Args:\n","            connection: MySQL連接\n","            cursor: MySQL游標\n","            df: 關鍵字統計DataFrame\n","            table_name: 資料表名稱\n","\n","        Returns:\n","            bool: 更新是否成功\n","        \"\"\"\n","        if not self._validate_dataframe(df):\n","            return False\n","\n","        try:\n","            self._create_keyword_table(cursor, table_name)\n","            self._batch_update(connection, cursor, df, table_name)\n","            return True\n","        except Exception as e:\n","            self.logger.error(f\"更新關鍵字失敗: {str(e)}\")\n","            connection.rollback()\n","            return False\n","\n","    def _validate_dataframe(self, df):\n","        \"\"\"驗證DataFrame格式\n","\n","        Args:\n","            df: 待驗證的DataFrame\n","\n","        Returns:\n","            bool: 是否符合要求\n","        \"\"\"\n","        required_columns = ['發佈日期', '來源', '排名', '關鍵字', '次數']\n","        return all(col in df.columns for col in required_columns)\n","\n","    def _create_keyword_table(self, cursor, table_name):\n","        \"\"\"創建或更新關鍵字資料表\n","\n","        Args:\n","            cursor: MySQL游標\n","            table_name: 資料表名稱\n","        \"\"\"\n","        drop_table_query = \"DROP TABLE IF EXISTS {table_name}\"\n","        create_table_query = f\"\"\"\n","        CREATE TABLE IF NOT EXISTS {table_name} (\n","            id INT AUTO_INCREMENT PRIMARY KEY,\n","            發佈日期 DATE NOT NULL,\n","            來源 VARCHAR(50) NOT NULL,\n","            排名 INT NOT NULL,\n","            關鍵字 VARCHAR(100),\n","            次數 INT,\n","            更新時間 TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n","            UNIQUE KEY 唯一關鍵字排名 (發佈日期, 來源, 排名)\n","        ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n","        \"\"\"\n","        cursor.execute(create_table_query)\n","\n","    def _batch_update(self, connection, cursor, df, table_name):\n","        \"\"\"批次更新關鍵字資料\n","\n","        Args:\n","            connection: MySQL連接\n","            cursor: MySQL游標\n","            df: 關鍵字統計DataFrame\n","            table_name: 資料表名稱\n","        \"\"\"\n","        update_query = f\"\"\"\n","        INSERT INTO {table_name} (發佈日期, 來源, 排名, 關鍵字, 次數)\n","        VALUES (%s, %s, %s, %s, %s)\n","        ON DUPLICATE KEY UPDATE\n","            關鍵字 = VALUES(關鍵字),\n","            次數 = VALUES(次數)\n","        \"\"\"\n","\n","        for i in range(0, len(df), self.batch_size):\n","            batch = df.iloc[i:i + self.batch_size]\n","            batch_data = [\n","                (row['發佈日期'], row['來源'], row['排名'],\n","                 row['關鍵字'], row['次數'])\n","                for _, row in batch.iterrows()\n","            ]\n","            cursor.executemany(update_query, batch_data)\n","            connection.commit()\n","            self.logger.info(f\"已更新記錄 {i+1} 到 {min(i+self.batch_size, len(df))}\")"],"metadata":{"id":"UOpdjYd7EXVa","executionInfo":{"status":"ok","timestamp":1730735128597,"user_tz":-480,"elapsed":1,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["### ***Main***"],"metadata":{"id":"6f0nV5KVYI1Y"}},{"cell_type":"code","source":["class MainProcessor:\n","    \"\"\"主要數據處理器\n","\n","    負責協調資料庫操作和關鍵字處理的完整工作流程。\n","\n","    主要功能：\n","    1. 從MongoDB讀取文檔\n","    2. 處理文檔關鍵字\n","    3. 更新MySQL數據庫\n","    \"\"\"\n","\n","    def __init__(self, batch_size: int = 1000):\n","        \"\"\"初始化處理器\n","\n","        Args:\n","            batch_size: 批次處理大小\n","        \"\"\"\n","        self.batch_size = batch_size\n","        self.db_manager = DatabaseManager()\n","        self.keyword_processor = KeywordStatisticsProcessor(\n","            stopwords=CUSTOM_STOPWORDS,\n","            batch_size=batch_size\n","        )\n","        self.logger = self._setup_logger()\n","\n","    def _setup_logger(self) -> logging.Logger:\n","        \"\"\"配置處理器專用的日誌記錄器\n","\n","        Returns:\n","            logging.Logger: 配置好的日誌記錄器\n","        \"\"\"\n","        logger = logging.getLogger(f\"{__name__}.MainProcessor\")\n","        logger.setLevel(logging.INFO)\n","\n","        # 檔案處理器\n","        file_handler = logging.handlers.RotatingFileHandler(\n","            'main_processor.log',\n","            maxBytes=10_000_000,  # 10MB\n","            backupCount=5\n","        )\n","\n","        # 日誌格式\n","        formatter = logging.Formatter(\n","            '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n","        )\n","        file_handler.setFormatter(formatter)\n","\n","        # 控制台處理器\n","        console_handler = logging.StreamHandler()\n","        console_handler.setFormatter(formatter)\n","\n","        logger.addHandler(file_handler)\n","        logger.addHandler(console_handler)\n","\n","        return logger\n","\n","    def process_data(self) -> bool:\n","        \"\"\"執行完整的數據處理流程\n","\n","        流程包括：\n","        1. 從MongoDB讀取文檔\n","        2. 批次處理文檔關鍵字\n","        3. 生成統計數據\n","        4. 更新MySQL數據庫\n","\n","        Returns:\n","            bool: 處理是否成功\n","        \"\"\"\n","        try:\n","            # 從MongoDB讀取並處理文檔\n","            documents = self._fetch_and_process_documents()\n","            if not documents:\n","                self.logger.warning(\"沒有找到需要處理的文檔\")\n","                return False\n","\n","            # 生成並更新關鍵字統計\n","            success = self._update_keyword_statistics()\n","            if success:\n","                self.logger.info(\"數據處理完成\")\n","                return True\n","            else:\n","                self.logger.error(\"數據處理失敗\")\n","                return False\n","\n","        except Exception as e:\n","            self.logger.error(f\"數據處理過程中發生錯誤: {str(e)}\")\n","            raise\n","\n","    def _fetch_and_process_documents(self) -> int:\n","        \"\"\"從MongoDB讀取並處理文檔\n","\n","        Returns:\n","            int: 處理的文檔數量\n","        \"\"\"\n","        processed_count = 0\n","\n","        with self.db_manager.get_mongo_connection() as collection:\n","            # 分批次處理文檔\n","            cursor = collection.find()\n","            while True:\n","                batch = list(itertools.islice(cursor, self.batch_size))\n","                if not batch:\n","                    break\n","\n","                for doc in batch:\n","                    if self._process_single_document(doc):\n","                        processed_count += 1\n","\n","                self.logger.info(f\"已處理 {processed_count} 個文檔\")\n","\n","        return processed_count\n","\n","    def _process_single_document(self, doc: Dict) -> bool:\n","        \"\"\"處理單個文檔\n","\n","        Args:\n","            doc: MongoDB文檔\n","\n","        Returns:\n","            bool: 處理是否成功\n","        \"\"\"\n","        try:\n","            key = doc.get('key', '')\n","            source = self.keyword_processor._determine_source(key)\n","            return self.keyword_processor.process_document(doc, source)\n","\n","        except Exception as e:\n","            self.logger.error(f\"處理文檔時發生錯誤: {str(e)}\")\n","            return False\n","\n","    def _update_keyword_statistics(self) -> bool:\n","        \"\"\"更新關鍵字統計到MySQL\n","\n","        Returns:\n","            bool: 更新是否成功\n","        \"\"\"\n","        try:\n","            # 生成統計數據\n","            keywords_df = self.keyword_processor.get_dataframe()\n","            if keywords_df.empty:\n","                self.logger.warning(\"沒有關鍵字統計數據可更新\")\n","                return False\n","\n","            # 更新MySQL數據庫\n","            with self.db_manager.get_mysql_connection() as connection:\n","                cursor = connection.cursor()\n","                success = self.keyword_processor.update_mysql_keywords(\n","                    connection, cursor, keywords_df\n","                )\n","                cursor.close()\n","                return success\n","\n","        except Exception as e:\n","            self.logger.error(f\"更新關鍵字統計時發生錯誤: {str(e)}\")\n","            return False\n","\n","\n","def main() -> int:\n","    \"\"\"主程序入口\n","\n","    初始化並執行數據處理流程，包含完整的錯誤處理和日誌記錄。\n","\n","    Returns:\n","        int: 程序執行狀態碼\n","    \"\"\"\n","    # 配置根日誌記錄器\n","    logging.basicConfig(\n","        level=logging.INFO,\n","        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n","        handlers=[\n","            logging.FileHandler('application.log'),\n","            logging.StreamHandler()\n","        ]\n","    )\n","    logger = logging.getLogger(__name__)\n","\n","    try:\n","        # 設定執行環境\n","        logger.info(\"開始執行數據處理程序\")\n","\n","        # 初始化處理器\n","        processor = MainProcessor()\n","\n","        # 執行處理流程\n","        if processor.process_data():\n","            logger.info(\"程序執行成功\")\n","            return 0\n","        else:\n","            logger.error(\"程序執行失敗\")\n","            return 1\n","\n","    except KeyboardInterrupt:\n","        logger.info(\"程序被使用者中斷\")\n","        return 2\n","    except Exception as e:\n","        logger.exception(f\"程序執行時發生未預期的錯誤: {str(e)}\")\n","        return 3\n","    finally:\n","        logger.info(\"程序結束執行\")\n","\n","\n","if __name__ == \"__main__\":\n","    exit_code = main()  # 儲存回傳值而不是直接呼叫 sys.exit()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6QitvohGpo14","executionInfo":{"status":"ok","timestamp":1730735170280,"user_tz":-480,"elapsed":40603,"user":{"displayName":"鄭心美","userId":"06903790925160052949"}},"outputId":"e72bfa09-dc99-47bc-eb46-a203babd6e41"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["2024-11-04 15:45:29,291 - __main__ - INFO - 開始執行數據處理程序\n","2024-11-04 15:45:29,291 - __main__ - INFO - 開始執行數據處理程序\n","INFO:__main__:開始執行數據處理程序\n","2024-11-04 15:45:38,211 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,211 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,211 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:38,364 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,364 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,364 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:38,446 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,446 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:38,446 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:40,142 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,142 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,142 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:40,433 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,433 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,433 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:40,823 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,823 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:40,823 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:41,747 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:41,747 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:41,747 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","2024-11-04 15:45:42,546 - __main__.MainProcessor - INFO - 已處理 993 個文檔\n","INFO:__main__.MainProcessor:已處理 993 個文檔\n","2024-11-04 15:45:43,038 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:43,038 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:43,038 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:44,327 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:44,327 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:44,327 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:44,736 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:44,736 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:44,736 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:46,418 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:46,418 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:46,418 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:46,805 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:46,805 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:46,805 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:47,252 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:47,252 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:47,252 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:52,469 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:52,469 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:52,469 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","2024-11-04 15:45:53,294 - __main__.MainProcessor - INFO - 已處理 1986 個文檔\n","INFO:__main__.MainProcessor:已處理 1986 個文檔\n","2024-11-04 15:45:53,477 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:53,477 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:53,477 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:53,569 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:53,569 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:53,569 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:54,302 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:54,302 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:54,302 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:55,465 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:55,465 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:55,465 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:57,764 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,764 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,764 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:57,806 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,806 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,806 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:57,828 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,828 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:57,828 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:58,766 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:58,766 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:58,766 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:58,834 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:58,834 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:58,834 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:59,237 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:59,237 - __main__ - WARNING - 文件缺少內容欄位\n","2024-11-04 15:45:59,237 - __main__ - WARNING - 文件缺少內容欄位\n","WARNING:__main__:文件缺少內容欄位\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","2024-11-04 15:45:59,398 - __main__.MainProcessor - INFO - 已處理 2690 個文檔\n","INFO:__main__.MainProcessor:已處理 2690 個文檔\n","2024-11-04 15:46:08,776 - __main__ - INFO - 已更新記錄 1 到 255\n","2024-11-04 15:46:08,776 - __main__ - INFO - 已更新記錄 1 到 255\n","2024-11-04 15:46:08,776 - __main__ - INFO - 已更新記錄 1 到 255\n","INFO:__main__:已更新記錄 1 到 255\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","2024-11-04 15:46:09,830 - __main__.MainProcessor - INFO - 數據處理完成\n","INFO:__main__.MainProcessor:數據處理完成\n","2024-11-04 15:46:09,845 - __main__ - INFO - 程序執行成功\n","2024-11-04 15:46:09,845 - __main__ - INFO - 程序執行成功\n","2024-11-04 15:46:09,845 - __main__ - INFO - 程序執行成功\n","INFO:__main__:程序執行成功\n","2024-11-04 15:46:09,854 - __main__ - INFO - 程序結束執行\n","2024-11-04 15:46:09,854 - __main__ - INFO - 程序結束執行\n","2024-11-04 15:46:09,854 - __main__ - INFO - 程序結束執行\n","INFO:__main__:程序結束執行\n"]}]}]}